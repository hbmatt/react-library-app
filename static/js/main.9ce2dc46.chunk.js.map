{"version":3,"sources":["components/layout/Header.js","components/Book.js","components/Library.js","components/AddBook.js","App.js","index.js"],"names":["Header","className","href","Book","this","props","book","id","title","author","pages","completed","onClick","delBook","bind","toggleRead","Component","Library","library","map","key","AddBook","state","errors","onSubmit","e","preventDefault","addBook","setState","onChange","target","name","value","length","htmlFor","type","class","disabled","App","uuid","filter","newBook","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ce2dc46.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <nav className=\"navbar is-info\">\n      <div className=\"navbar-brand\">\n        <a href=\"/\" className=\"navbar-item is-size-5\">\n          Library App\n        </a>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nclass Book extends Component {\n  render() {\n    const { id, title, author, pages, completed } = this.props.book;\n    return (\n      <tr>\n        <td>{title}</td>\n        <td>{author}</td>\n        <td>{pages}</td>\n        <td>{completed ? \"Read\" : \"To Read\"}</td>\n        <td className=\"has-text-centered\">\n          <button\n            className=\"button is-danger is-small\"\n            onClick={this.props.delBook.bind(this, id)}\n          >\n            Delete\n          </button>\n        </td>\n        <td className=\"has-text-centered\">\n          <button\n            className=\"button is-warning is-small\"\n            onClick={this.props.toggleRead.bind(this, id)}\n          >\n            {completed ? \"To Read\" : \"Read\"}\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\n// PropTypes\nBook.propTypes = {\n  book: PropTypes.object.isRequired,\n  toggleRead: PropTypes.func.isRequired,\n  delBook: PropTypes.func.isRequired,\n};\n\nexport default Book;\n","import React, { Component } from \"react\";\nimport Book from \"./Book\";\n\nimport PropTypes from 'prop-types';\n\nclass Library extends Component {\n  render() {\n    return (\n      <div className=\"column is-three-quarters\">\n        <h1 className=\"title\">Library</h1>\n        <table className=\"table is-fullwidth\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Author</th>\n              <th>Pages</th>\n              <th>Status</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.library.map((book) => (\n            <Book\n              key={book.id}\n              book={book}\n              toggleRead={this.props.toggleRead}\n              delBook={this.props.delBook}\n            />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nLibrary.propTypes = {\n  library: PropTypes.array.isRequired,\n  toggleRead: PropTypes.func.isRequired,\n  delBook: PropTypes.func.isRequired\n}\n\nexport default Library;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nclass AddBook extends Component {\n  state = {\n    title: \"\",\n    author: \"\",\n    pages: \"\",\n    completed: \"\",\n    errors: {\n      title: \"\",\n      author: \"\",\n      pages: \"\",\n    },\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addBook(\n      this.state.title,\n      this.state.author,\n      this.state.pages,\n      this.state.completed\n    );\n    this.setState({ title: \"\", author: \"\", pages: \"\", completed: \"\" });\n  };\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    let errors = this.state.errors;\n\n    if (value.length < 1) {\n      errors[name] = `Please enter a value for ${name}.`;\n    } else {\n      errors[name] = \"\";\n    }\n\n    this.setState({ errors, [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"column is-one-quarter\">\n        <div className=\"box\">\n          <h1 className=\"title\">Add Book</h1>\n          <form onSubmit={this.onSubmit}>\n            <div className=\"field\">\n              <label htmlFor=\"title\" className=\"label\">\n                Title\n              </label>\n              <div className=\"control\">\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  className={\n                    \"input\" + (this.state.errors.title ? \" is-danger\" : \"\")\n                  }\n                  value={this.state.title}\n                  onChange={this.onChange}\n                />\n              </div>\n              <p class=\"help is-danger\">{this.state.errors.title}</p>\n            </div>\n            <div className=\"field\">\n              <label htmlFor=\"author\" className=\"label\">\n                Author\n              </label>\n              <div className=\"control\">\n                <input\n                  type=\"text\"\n                  name=\"author\"\n                  className={\n                    \"input\" + (this.state.errors.author ? \" is-danger\" : \"\")\n                  }\n                  value={this.state.author}\n                  onChange={this.onChange}\n                />\n              </div>\n              <p class=\"help is-danger\">{this.state.errors.author}</p>\n            </div>\n            <div className=\"field\">\n              <label htmlFor=\"pages\" className=\"label\">\n                Pages\n              </label>\n              <div className=\"control\">\n                <input\n                  type=\"number\"\n                  name=\"pages\"\n                  className={\n                    \"input\" + (this.state.errors.pages ? \" is-danger\" : \"\")\n                  }\n                  value={this.state.pages}\n                  onChange={this.onChange}\n                />\n              </div>\n              <p class=\"help is-danger\">{this.state.errors.pages}</p>\n            </div>\n            <div className=\"field\">\n              <label htmlFor=\"completed\" className=\"label\">\n                Status\n              </label>\n              <div className=\"select\">\n                <select\n                  name=\"completed\"\n                  value={this.state.completed}\n                  onChange={this.onChange}\n                >\n                  <option value=\"false\">To Read</option>\n                  <option value=\"true\">Read</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"control\">\n                <input\n                  type=\"submit\"\n                  value=\"Submit\"\n                  className=\"button is-info\"\n                  disabled={\n                    this.state.title && this.state.author && this.state.pages\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nAddBook.propTypes = {\n  addBook: PropTypes.func.isRequired,\n};\n\nexport default AddBook;\n","import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nimport Header from \"./components/layout/Header\";\nimport Library from \"./components/Library\";\nimport AddBook from \"./components/AddBook\";\n\nimport \"./App.scss\";\n\nclass App extends Component {\n  state = {\n    library: [\n      {\n        id: uuid(),\n        title: \"The Queen of Attolia\",\n        author: \"Megan Whalen Turner\",\n        pages: 280,\n        completed: true,\n      },\n      {\n        id: uuid(),\n        title: \"The King of Attolia\",\n        author: \"Megan Whalen Turner\",\n        pages: 397,\n        completed: true,\n      },\n      {\n        id: uuid(),\n        title: \"Thick As Thieves\",\n        author: \"Megan Whalen Turner\",\n        pages: 352,\n        completed: false,\n      },\n    ],\n  };\n\n  toggleRead = (id) => {\n    this.setState({\n      library: this.state.library.map((book) => {\n        return book.id !== id ? book : { ...book, completed: !book.completed };\n      }),\n    });\n  };\n\n  delBook = (id) => {\n    this.setState({\n      library: this.state.library.filter((book) => book.id !== id),\n    });\n  };\n\n  addBook = (title, author, pages, completed) => {\n    const newBook = {\n      id: uuid(),\n      title,\n      author,\n      pages,\n      completed,\n    };\n    this.setState({\n      library: [...this.state.library, newBook],\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"columns is-centered\">\n              <Library\n                library={this.state.library}\n                toggleRead={this.toggleRead}\n                delBook={this.delBook}\n              />\n              <AddBook addBook={this.addBook} />\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}